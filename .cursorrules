{
  "rules": {
    "project": {
      "name": "calorie",
      "type": "full-stack",
      "structure": {
        "enforced": true,
        "allowNewDirectories": false
      }
    },
    "directories": {
      "src": {
        "description": "Backend source code",
        "allowedFiles": [
          "*.js",
          "*.ts"
        ],
        "subdirectories": {
          "config": {
            "purpose": "Configuration files",
            "required": [
              "app.config.js",
              "test.config.js"
            ],
            "allowNewFiles": false
          },
          "models": {
            "purpose": "Database models",
            "required": [
              "index.js",
              "User.js",
              "Profile.js",
              "NutritionLog.js"
            ],
            "allowNewFiles": false
          },
          "routes": {
            "purpose": "API routes",
            "required": [
              "auth.routes.js",
              "profile.routes.js",
              "nutrition.routes.js"
            ],
            "pattern": "*.routes.js"
          },
          "middleware": {
            "purpose": "Express middleware",
            "required": [
              "auth.js",
              "validate.js",
              "error.js"
            ],
            "pattern": "*.js"
          },
          "controllers": {
            "purpose": "Business logic",
            "required": [
              "auth.controller.js",
              "profile.controller.js",
              "nutrition.controller.js"
            ],
            "pattern": "*.controller.js"
          },
          "tests": {
            "purpose": "Test files",
            "pattern": "*.test.js"
          }
        }
      },
      "client": {
        "description": "Frontend source code",
        "subdirectories": {
          "src": {
            "js": {
              "required": [
                "script.js",
                "nutrition.js",
                "healthMonitor.js",
                "culturalAdaptations.js"
              ]
            },
            "styles": {
              "required": [
                "styles.css"
              ]
            }
          }
        },
        "required": [
          "index.html",
          "login.html"
        ]
      }
    },
    "naming": {
      "components": "PascalCase",
      "routes": "camelCase",
      "models": "PascalCase",
      "controllers": "PascalCase"
    },
    "database": {
      "type": "postgresql",
      "models": {
        "required": [
          "timestamps",
          "validation"
        ]
      }
    },
    "development": {
      "incrementalApproach": {
        "steps": [
          {
            "order": 1,
            "name": "Basic Setup",
            "files": [
              "src/app.js",
              ".env",
              "package.json"
            ]
          },
          {
            "order": 2,
            "name": "Database Models",
            "files": [
              "src/models/index.js",
              "src/models/User.js",
              "src/models/Profile.js",
              "src/models/NutritionLog.js"
            ]
          },
          {
            "order": 3,
            "name": "Authentication",
            "files": [
              "src/middleware/auth.js",
              "src/middleware/validate.js",
              "src/middleware/error.js",
              "src/routes/auth.routes.js"
            ]
          },
          {
            "order": 4,
            "name": "Core Features",
            "files": [
              "src/routes/profile.routes.js",
              "src/routes/nutrition.routes.js",
              "src/controllers/auth.controller.js",
              "src/controllers/profile.controller.js",
              "src/controllers/nutrition.controller.js"
            ]
          },
          {
            "order": 5,
            "name": "Frontend Integration",
            "files": [
              "client/src/js/script.js",
              "client/src/js/nutrition.js",
              "client/src/js/healthMonitor.js",
              "client/src/js/culturalAdaptations.js"
            ]
          }
        ]
      }
    },
    "aiSessionManagement": {
      "sessionStart": {
        "required": true,
        "actions": [
          {
            "tool": "projectManager.js",
            "purpose": "Verify project state and current step"
          },
          {
            "tool": "db-check.js",
            "purpose": "Verify database structure"
          }
        ],
        "contextFiles": [
          {
            "path": "docs/AI_COLLABORATION.md",
            "purpose": "Current project context and status"
          },
          {
            "path": "docs/devlog.md",
            "purpose": "Development history and recent updates"
          },
          {
            "path": "docs/LAST_SESSION.md",
            "purpose": "Previous session handoff notes"
          }
        ]
      },
      "duringSession": {
        "required": true,
        "trackingFiles": [
          {
            "path": "docs/devlog.md",
            "updateTrigger": "significant progress"
          },
          {
            "path": "docs/AI_COLLABORATION.md",
            "updateTrigger": "status change"
          }
        ]
      },
      "sessionEnd": {
        "required": true,
        "actions": [
          {
            "tool": "projectManager.js",
            "purpose": "Update project status"
          },
          {
            "tool": "sessionInit.js",
            "purpose": "Generate handoff notes",
            "output": "docs/LAST_SESSION.md"
          }
        ],
        "commitRequirements": [
          "Update AI context files",
          "Generate handoff notes",
          "Verify project state"
        ]
      }
    },
    "contextMaintenance": {
      "automaticUpdates": {
        "preCommit": {
          "required": true,
          "script": "npm run ai:save"
        },
        "onBranchChange": {
          "required": true,
          "script": "npm run ai:status"
        }
      },
      "manualUpdates": {
        "commands": {
          "ai:init": "Initialize new AI session",
          "ai:status": "Check project status",
          "ai:save": "Save session state"
        }
      }
    }
  }
}
